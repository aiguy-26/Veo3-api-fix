import time
from google import genai
from google.genai import types
from datetime import datetime

# --- 1. CONFIGURATION ---
PROJECT_ID = "octopi-ycti"
LOCATION = "us-central1"
# THE FIX: A new, "safe" prompt that will not violate usage guidelines.
PROMPT = """A high-definition, cinematic shot of a neanderthal discovering a glowing mushroom in a magical forest at night. He exclaims in his mother tongue and eats it."""

timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
OUTPUT_FILENAME = f"veo_video_{timestamp}.mp4"

# --- 2. INITIALIZE THE CLIENT ---
print("Initializing Vertex AI client...")
client = genai.Client(vertexai=True, project=PROJECT_ID, location=LOCATION)


# --- 3. SUBMIT THE VIDEO GENERATION REQUEST ---
print(f"Submitting video generation request...")
initial_operation = client.models.generate_videos(
    model="veo-3.0-generate-preview",
    prompt=PROMPT,
)
operation_name = initial_operation.name
print(f"Request submitted successfully. Operation Name: {operation_name}")


# --- 4. POLL FOR THE RESULT (This logic is now proven to be correct) ---
print("Polling for result. This may take several minutes...")
final_operation = None
while True:
    operation_to_refresh = types.GenerateVideosOperation(name=operation_name)
    refreshed_operation = client.operations.get(operation_to_refresh)

    if refreshed_operation.done:
        print("Operation complete!")
        final_operation = refreshed_operation
        break
        
    print("...Still generating, please wait...")
    time.sleep(10)

# --- 5. GET THE RESULT AND SAVE THE FINAL VIDEO ---
print(f"Saving generated video to '{OUTPUT_FILENAME}'...")
final_response = final_operation.response

if final_response is None:
    print("\nFATAL ERROR: The operation completed, but the .response attribute is still None.")
    if final_operation.error:
         # This block is what successfully caught the error for us.
         print(f"Operation failed with an error: {final_operation.error}")
else:
    generated_video = final_response.generated_videos[0]
    video_data = generated_video.video.video_bytes

    with open(OUTPUT_FILENAME, "wb") as f:
        f.write(video_data)

    print(f"\nSuccess! Your video has been saved to {OUTPUT_FILENAME}")
